on:
  pull_request:
    branches:
    - develop
    - main
  push:
    branches:
    - develop
    - main

jobs:
  gitversion:
    name: gitversion
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: |
        git fetch --prune --unshallow

    - name: Check base ref
      run: echo ${{ env.GITHUB_BASE_REF }}

    - name: Calculate changed services
      id: calculate_changed_services
      run: |
        changed_services=`git diff origin/develop HEAD --name-only | grep -o '^apps/[a-zA-Z-]*' | sort | uniq`
        changed_services=$(printf '%s' "$changed_services" | jq --raw-input --slurp '.')
        echo "::set-output name=changed_services::$changed_services"

    - name: Calculate service versions
      id: calculate_service_versions
      run: |
        changed_services=( ${{ fromJSON(steps.calculate_changed_services.outputs.changed_services) }} )
        service_versions_txt="## calculated service versions\n"
        for svc in "${changed_services[@]}"; do
          service_version=$(docker run --rm -v "$(pwd):/repo" gittools/gitversion:5.10.0-alpine.3.14-6.0 /repo /config "/repo/${svc}/.gitversion.yml"  /showvariable MajorMinorPatch)
          service_versions_txt="${service_versions_txt}- ${svc}: ${service_version}\n"
        done
        # fix multiline variables
        # from: https://github.com/actions/create-release/issues/64#issuecomment-638695206
        PR_BODY="${service_versions_txt}"
        PR_BODY=$(printf '%s' "$PR_BODY" | jq --raw-input --slurp '.')
        echo "::set-output name=PR_BODY::$PR_BODY"

    - name: Event Type
      run: echo The ${{ github.event_name }} event triggered this step.

    - name: Update PR description
      if: ${{ github.pull_request == 'pull_request' }}
      run: |
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        # from https://github.com/actions/checkout/issues/58#issuecomment-614041550
        jq -nc '{"body": "${{ fromJSON(steps.calculate_service_versions.outputs.PR_BODY) }}" }' | \
        curl -sL  -X PATCH -d @- \
          -H "Content-Type: application/json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER"
